<MainScreen>:
    BoxLayout:
        orientation: "vertical"

        MDToolbar:
            title: "Kivy Music Player"
            right_action_items: [["settings", lambda x: root.go_to_settings()]]

        MDBottomNavigation:

            HomeScreen:
                name: "home_screen"
                text: 'Home'
                icon: 'home'

            SongListScreen:
                name: "song_list_screen"
                text: 'Songs'
                icon: 'music'


<ItemWithRemove>:

    IconRightWidget:
        icon: 'minus'

<SettingsSearchPathsScreen>:
    name: 'settings_search_paths'
    BoxLayout:
        orientation: 'vertical'

        ScrollView:

            MDList:
                id: search_paths_list

        MDBottomAppBar:
            MDToolbar:
                title: "Search Paths"
                icon: "plus"
                type: 'bottom'
                left_action_items: [["android", lambda x: root.go_to_settings()]]
                on_action_button: root.launch_file_manager()
                mode: 'end'

<SettingsScreen>:
    BoxLayout:
        orientation: 'vertical'

        MDToolbar:
            title: "Settings"
            left_action_items: [["android", lambda x: root.go_to_main()]]

        ScrollView:

            MDList:
                id: settings_list

                TwoLineIconListItem:
                    text: "Search Paths"
                    secondary_text: "where to look for songs"
                    on_press: root.go_to_search_paths()

                    IconLeftWidget:
                        icon: 'search'




<HomeScreen>:
    BoxLayout:
        orientation: "vertical"
        MDLabel:
            text: "home"


<SongListScreen>:
    BoxLayout:
        orientation: "vertical"

        ScrollView:
            MDList:
                id: songs_list

<SongItem>:
    ImageLeftWidget:
        id: artwork_thumb
        allow_stretch: True
        keep_ratio: False
        size_hint: 1, 1

<SongScreen>:
    name: 'song_screen'
    BoxLayout:
        orientation: 'vertical'
        id: song_screen_bg
        spacing: dp(10)

        MDCard:
            size_hint: 0.95, 0.5
            pos_hint: {"center_x": .5, "center_y": .5}
            # canvas.before:
            #     Color:
            #         rgba: (1, 0, 0, 0.5)
            #     Rectangle:
            #         size: self.size
            #         pos: self.pos

            FitImage:
                size_hint: 1, 1
                id: album_art

        BoxLayout:
            orientation: 'vertical'
            size_hint_y: 0.5
            # canvas.before:
            #     Color:
            #         rgba: (0, 0, 1, 0.5)
            #     Rectangle:
            #         size: self.size
            #         pos: self.pos

            MDLabel:
                text: root.song_name
                halign: 'center'

            BoxLayout:
                orientation: 'horizontal'
                size_hint_y: 0.05

                MDLabel:
                    id: song_cur_pos_label
                    size_hint: 0.2, 1
                    halign: "center"
                MDSlider:
                    id: song_slider
                    min: 0
                    max: root.song_max_length
                    value: root.song_current_pos
                    hint: False
                    on_touch_up: if self.collide_point(*args[1].pos): root.seek_song()
                MDLabel:
                    id: song_total_length_label
                    size_hint: 0.2, 1
                    halign: "center"

            BoxLayout:
                MDBottomAppBar:
                    MDToolbar:
                        id: song_screen_toolbar
                        icon: root.song_state
                        type: 'bottom'
                        left_action_items: [["repeat-off" if root.loop_status == 0 else "repeat-once", lambda x: root.toggle_loop()], ["skip-previous", lambda x: root.prev_song()]]
                        right_action_items: [["skip-next", lambda x: root.next_song()], ["shuffle-disabled" if not root.shuffle_status else "shuffle-variant", lambda x: root.toggle_shuffle()]]
                        on_action_button: root.toggle_song_play()
                        mode: 'center'
